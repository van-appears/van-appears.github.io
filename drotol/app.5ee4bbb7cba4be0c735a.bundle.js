!function(e){var n={};function t(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(o,i,function(n){return e[n]}.bind(null,i));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);t(1),t(8)},function(e,n,t){const o=t(2),i=t(3),r=t(4),a=t(5),l=t(6),c=t(7);window.onload=function(){const e=o(),n=i(),t=new r(n,e),s=new a(e);c(n,e),l(e),t.start(),setInterval((function(){t.update(),s.update()}),40)}},function(e,n){function t(){const e=new Array(128);for(let n=0;n<128;n++)e[n]=128;return{data:e,dataPos:0,dataSpeed:.5}}function o(e,n){for(let t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e}e.exports=function(){return{active:"oscillator1Frequency",oscillator1Frequency:o({label:"Frequency",type:"triangle",lfo:!1},t()),oscillator2Frequency:o({label:"Frequency",type:"triangle",lfo:!1},t()),gain:o({label:"Gain"},t()),filterFrequency:o({label:"Filter frequency",type:"allpass"},t()),filterQ:o({label:"Filter resonance",multiplier:1},t()),echo:{label:"Echo",length:.1,sustain:.5,enabled:!0}}}},function(e,n){const t=new(window.AudioContext||window.webkitAudioContext),o=t.createOscillator(),i=t.createOscillator(),r=t.createGain(),a=t.createGain(),l=t.createBiquadFilter(),c=t.createDelay(),s=t.createGain();o.connect(r),i.connect(r.gain),r.connect(a),a.connect(l),l.connect(t.destination),l.connect(c),c.connect(s),s.connect(t.destination),s.connect(c),e.exports=function(){return{oscillator1:o,oscillator2:i,oscillatorGain:a,filter:l,delay:c,delayGain:s}}},function(e,n){function t(e){e.dataPos+=e.dataSpeed,e.dataPos>=128&&(e.dataPos-=128)}function o(e){return(254-e.data[Math.floor(e.dataPos)])/254}function i(e){return e.lfoEnabled?.2*Math.pow(16,o(e)):60*Math.pow(8,o(e))}function r(e,n){this.model=n,this.audioGraph=e,this.lastOscillator1Type=e.oscillator1.type,this.lastOscillator2Type=e.oscillator2.type,this.lastFilterType=e.filter.type,this.lastEchoLength=e.delay.delayTime.value}r.prototype.start=function(){this.audioGraph.oscillator1.start(),this.audioGraph.oscillator2.start()},r.prototype.update=function(){var e;this.model.oscillator1Frequency.type!==this.lastOscillator1Type&&(this.lastOscillator1Type=this.model.oscillator1Frequency.type,this.audioGraph.oscillator1.type=this.lastOscillator1Type),this.model.oscillator2Frequency.type!==this.lastOscillator2Type&&(this.lastOscillator2Type=this.model.oscillator2Frequency.type,this.audioGraph.oscillator2.type=this.lastOscillator2Type),this.model.filterFrequency.type!==this.lastFilterType&&(this.lastFilterType=this.model.filterFrequency.type,this.audioGraph.filter.type=this.lastFilterType),this.model.echo.length!==this.lastEchoLength&&(this.lastEchoLength=this.model.echo.length,this.audioGraph.delay.delayTime.value=this.lastEchoLength),t((e=this.model).oscillator1Frequency),t(e.oscillator2Frequency),t(e.gain),t(e.filterFrequency),t(e.filterQ),this.audioGraph.delayGain.gain.value=this.model.echo.enabled?this.model.echo.sustain:0;const n=i(this.model.oscillator1Frequency);this.audioGraph.oscillator1.frequency.value=n;const r=i(this.model.oscillator2Frequency);this.audioGraph.oscillator2.frequency.value=r;const a=o(this.model.gain);this.audioGraph.oscillatorGain.gain.value=a;const l=60*Math.pow(100,o(this.model.filterFrequency));this.audioGraph.filter.frequency.value=l;const c=this.model.filterQ.multiplier*o(this.model.filterQ);this.audioGraph.filter.Q.value=c},e.exports=r},function(e,n){document.querySelector(".layers").getBoundingClientRect();const t=document.querySelector("#draw"),o=t.getContext("2d");o.lineWidth=1;let i=0,r=0,a=0,l=0,c=!1,s=!1;function u(e,n,t,o,i){const r=(i-t)/(o-n);if(n<o)for(let i=n;i<=o;i++)e[i]=t,t+=r;else for(let i=n;i>=o;i--)e[i]=t,t-=r}function d(e){const n=e.changedTouches?e.changedTouches[0]:e;return Math.floor((n.pageX-i)/2)}function p(e){return(e.changedTouches?e.changedTouches[0]:e).pageY-r}function h(e){this.model=e,t.addEventListener("mousedown",this.mouseDown.bind(this)),t.addEventListener("mousemove",this.mouseMove.bind(this)),t.addEventListener("mouseout",this.mouseUp.bind(this)),t.addEventListener("mouseup",this.mouseUp.bind(this)),t.addEventListener("touchstart",this.mouseDown.bind(this)),t.addEventListener("touchmove",this.mouseMove.bind(this)),t.addEventListener("touchend",this.mouseUp.bind(this)),t.addEventListener("touchcancel",this.mouseUp.bind(this)),function(){document.querySelector("#bg");const e=t.getContext("2d");e.beginPath(),e.strokeStyle="#ddd",e.lineWidth=1,e.moveTo(0,128),e.lineTo(255,128),e.stroke(),e.closePath()}();const n=document.querySelector(".layers").getBoundingClientRect();i=n.left,r=n.top}h.prototype.update=function(){const e=this.model[this.model.active];var n;(this.data=e&&e.data,this.updated=!1,this.data)&&(!function(e){o.clearRect(0,0,255,255),o.beginPath(),o.strokeStyle="#999";let n=e[0];o.moveTo(0,n);for(let t=1;t<128;t++){const i=e[t];o.lineTo(2*t,i),n=i}o.stroke(),o.closePath()}(this.data),n=e&&e.dataPos,o.beginPath(),o.strokeStyle="#090",o.moveTo(2*n,0),o.lineTo(2*n,255),o.stroke(),o.closePath())},h.prototype.mouseDown=function(e){this.data&&(a=d(e),l=p(e),this.data[a]=l,c=!0)},h.prototype.mouseUp=function(e){if(!this.data)return;const n=d(e),t=p(e);s?u(this.data,a,l,n,t):c&&(this.data[n]=t),c=!1,s=!1,a=null,l=null},h.prototype.mouseMove=function(e){if(this.data&&!this.updated&&c){const n=d(e),t=p(e);u(this.data,a,l,n,t),this.updated=!0,s=!0,a=n,l=t}},e.exports=h},function(e,n){e.exports=function(e){const n=document.querySelector("#speed"),t=(document.querySelector("#filterType"),document.querySelector("#echoOnOff")),o=document.querySelector("#echoLength"),i=document.querySelector("#echoSustain"),r=document.querySelector("#lfoOnOff"),a=document.querySelector(".what"),l=document.querySelector("body");let c=e[e.active];function s(e,n){a.innerHTML=e}function u(e){document.querySelector('input[name="oscillatorType"][value="'+e+'"]').click()}function d(t){const o=t.target.value;l.className="selected_"+o,e.active=o,c=e[o],s(c.label,c.type),n.value=Math.log(c.dataSpeed)/Math.log(2),"oscillator1Frequency"===o?(u(e.oscillator1Frequency.type),r.checked=e.oscillator1Frequency.lfoEnabled):"oscillator2Frequency"===o&&(u(e.oscillator2Frequency.type),r.checked=e.oscillator2Frequency.lfoEnabled)}function p(n){const t=n.target.value;switch(e.filterFrequency.type=t,s(c.label,e.filterFrequency.type),t){case"notch":case"bandpass":e.filterQ.multiplier=30,e.filterQ.label="Filter bandwidth";break;default:e.filterQ.multiplier=20,e.filterQ.label="Filter resonance"}}function h(e){c.type=e.target.value}n.addEventListener("input",(function(e){c.dataSpeed=Math.pow(2,e.target.value)})),o.addEventListener("change",(function(e){c.length=e.target.value})),i.addEventListener("input",(function(e){c.sustain=e.target.value})),t.addEventListener("change",(function(e){c.enabled=e.target.checked})),r.addEventListener("change",(function(e){c.lfoEnabled=e.target.checked}));const f=document.querySelectorAll('input[name="box"]');for(let e=0;e<f.length;e++)f[e].onclick=d;f[0].click();const y=document.querySelectorAll('input[name="filterType"]');for(let e=0;e<y.length;e++)y[e].onclick=p;y[0].click();const b=document.querySelectorAll('input[name="oscillatorType"]');for(let e=0;e<b.length;e++)b[e].onclick=h;b[0].click()}},function(e,n){e.exports=function(e,n){e.oscillator1.type=n.oscillator1Frequency.type,e.oscillator2.type=n.oscillator2Frequency.type;document.querySelector("#lfoOnOff").checked=n.oscillator1Frequency.lfo;document.querySelector("#echoOnOff").checked=n.echo.enabled;document.querySelector("#echoLength").value=n.echo.length,e.delay.delayTime.value=n.echo.length;document.querySelector("#echoSustain").value=n.echo.sustain,e.delayGain.gain.value=n.echo.sustain}},function(e,n,t){var o=t(9),i=t(10);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var r={insert:"head",singleton:!1};o(i,r);e.exports=i.locals||{}},function(e,n,t){"use strict";var o,i=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},r=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),a=[];function l(e){for(var n=-1,t=0;t<a.length;t++)if(a[t].identifier===e){n=t;break}return n}function c(e,n){for(var t={},o=[],i=0;i<e.length;i++){var r=e[i],c=n.base?r[0]+n.base:r[0],s=t[c]||0,u="".concat(c," ").concat(s);t[c]=s+1;var d=l(u),p={css:r[1],media:r[2],sourceMap:r[3]};-1!==d?(a[d].references++,a[d].updater(p)):a.push({identifier:u,updater:b(p,n),references:1}),o.push(u)}return o}function s(e){var n=document.createElement("style"),o=e.attributes||{};if(void 0===o.nonce){var i=t.nc;i&&(o.nonce=i)}if(Object.keys(o).forEach((function(e){n.setAttribute(e,o[e])})),"function"==typeof e.insert)e.insert(n);else{var a=r(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}return n}var u,d=(u=[],function(e,n){return u[e]=n,u.filter(Boolean).join("\n")});function p(e,n,t,o){var i=t?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(e.styleSheet)e.styleSheet.cssText=d(n,i);else{var r=document.createTextNode(i),a=e.childNodes;a[n]&&e.removeChild(a[n]),a.length?e.insertBefore(r,a[n]):e.appendChild(r)}}function h(e,n,t){var o=t.css,i=t.media,r=t.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),r&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleSheet)e.styleSheet.cssText=o;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(o))}}var f=null,y=0;function b(e,n){var t,o,i;if(n.singleton){var r=y++;t=f||(f=s(n)),o=p.bind(null,t,r,!1),i=p.bind(null,t,r,!0)}else t=s(n),o=h.bind(null,t,n),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return o(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;o(e=n)}else i()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=i());var t=c(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var o=0;o<t.length;o++){var i=l(t[o]);a[i].references--}for(var r=c(e,n),s=0;s<t.length;s++){var u=l(t[s]);0===a[u].references&&(a[u].updater(),a.splice(u,1))}t=r}}}},function(e,n,t){var o=t(11),i=t(12),r=t(13);n=o(!1);var a=i(r);n.push([e.i,'html,\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: "Arial", "Helvetica", sans-serif;\n  height: 100%;\n  width: 100%;\n  background: #ddd;\n  overflow-y: hidden;\n}\n\nbody {\n  text-align: center;\n}\n\ncanvas {\n  margin: 0;\n  border: none;\n  position: absolute;\n}\n\ninput[type="radio"],\ninput[type="checkbox"] {\n  display: none;\n}\n\ninput[type="radio"] + label,\ninput[type="checkbox"] + label {\n  border-radius: 3px;\n  border-style: solid;\n  border-width: 1px;\n  border-color: black;\n}\n\ninput[type="range"] {\n  margin: 0;\n  padding: 0;\n  width: 220px;\n  height: 32px;\n}\n\nlabel,\na.home,\na.sourceCode {\n  display: inline-block;\n  cursor: pointer;\n  outline: 0;\n  width: 32px;\n  height: 32px;\n  text-indent: -99999px;\n  background-image: url('+a+');\n  background-repeat: no-repeat;\n}\n\nlabel[for="oscillator1"] {\n  background-position: 0 0;\n}\n\nlabel[for="oscillator2"] {\n  background-position: -32px 0;\n}\n\nlabel[for="gain"] {\n  background-position: -64px 0;\n}\n\nlabel[for="filterFrequency"] {\n  background-position: -96px 0;\n}\n\nlabel[for="filterQ"] {\n  background-position: -128px 0;\n}\n\nlabel[for="echo"] {\n  background-position: -160px 0;\n}\n\nlabel[for="sine"] {\n  background-position: -192px 0;\n}\n\nlabel[for="sawtooth"] {\n  background-position: -224px 0;\n}\n\nlabel[for="triangle"] {\n  background-position: -256px 0;\n}\n\nlabel[for="square"] {\n  background-position: -288px 0;\n}\n\nlabel[for="allpass"] {\n  background-position: -320px 0;\n}\n\nlabel[for="highpass"] {\n  background-position: -352px 0;\n}\n\nlabel[for="lowpass"] {\n  background-position: -384px 0;\n}\n\nlabel[for="bandpass"] {\n  background-position: -416px 0;\n}\n\nlabel[for="speed"] {\n  background-position: -448px 0;\n}\n\nlabel[for="echoOnOff"] {\n  background-position: -544px 0;\n}\n\nlabel[for="echoLength"] {\n  background-position: -512px 0;\n}\n\nlabel[for="echoSustain"] {\n  background-position: -512px -32px;\n}\n\nlabel[for="lfoOnOff"] {\n  background-position: -480px 0px;\n}\n\ninput[type="radio"]:checked + label,\ninput[type="checkbox"]:checked + label {\n  background-position-y: -32px;\n}\n\n.oscillatorControls {\n  display: none;\n}\n\n.selected_oscillator1Frequency .oscillatorControls,\n.selected_oscillator2Frequency .oscillatorControls {\n  display: block;\n}\n\n.filterControls {\n  display: none;\n}\n\n.selected_filterFrequency .filterControls {\n  display: block;\n}\n\n.echoControls {\n  display: none;\n}\n\n.selected_echo .echoControls {\n  display: block;\n}\n\n.selected_echo .lineControls {\n  display: none;\n}\n\n.selected_echo canvas {\n  display: none;\n}\n\n.wrapper {\n  display: inline-block;\n  background: #ffffff;\n  width: 300px;\n  padding: 20px;\n}\n\n.model {\n  height: 34px;\n}\n\n.what {\n  margin: 10px 0;\n  height: 20px;\n}\n\n.layers {\n  position: relative;\n  text-align: left;\n  display: inline-block;\n  background: #dddddd;\n  width: 255px;\n  height: 255px;\n}\n\na.home {\n  background-position: -576px -32px;\n  position: relative;\n  left: 136px;\n  top: 2px;\n}\n\na.sourceCode {\n  background-position: -576px 0;\n  position: relative;\n  left: 136px;\n  top: 2px;\n}\n',""]),e.exports=n},function(e,n,t){"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=function(e,n){var t=e[1]||"",o=e[3];if(!o)return t;if(n&&"function"==typeof btoa){var i=(a=o,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(c," */")),r=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[t].concat(r).concat([i]).join("\n")}var a,l,c;return[t].join("\n")}(n,e);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,o){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(o)for(var r=0;r<this.length;r++){var a=this[r][0];null!=a&&(i[a]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);o&&i[c[0]]||(t&&(c[2]?c[2]="".concat(t," and ").concat(c[2]):c[2]=t),n.push(c))}},n}},function(e,n,t){"use strict";e.exports=function(e,n){return n||(n={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},function(e,n,t){"use strict";t.r(n),n.default=t.p+"8396dff4f59d12df65a0882f89be9cce.png"}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,